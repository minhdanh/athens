apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
      annotations:
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: copy-key-files
          image: alpine:3.6
          command:
            - sh
            - -c
          args: ["cp /root/.ssh/id_rsa* /ssh-keys && chmod 400 /ssh-keys/*"]
          volumeMounts:
          - name: ssh-keys
            mountPath: /ssh-keys
          {{- range $server := .Values.sshGitServers }}
          - name: {{ template "fullname" $ }}-secret
            mountPath: /root/.ssh/id_rsa-{{ $server.host }}
            subPath: id_rsa-{{ $server.host }}
          {{- end }}
      volumes:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        livenessProbe:
          httpGet:
            path: "{{ template "livenessPath" . }}"
            port: 3000
        readinessProbe:
          httpGet:
            path: "{{ template "readinessPath" . }}"
            port: 3000
        env:
        - name: ATHENS_STORAGE_TYPE
          value: {{ .Values.storage.type | quote }}
        {{- if eq .Values.storage.type "disk" }}
        - name: ATHENS_DISK_STORAGE_ROOT
          value: {{ .Values.storage.disk.storageRoot | quote }}
        {{- else if eq .Values.storage.type "mongo"}}
        - name: ATHENS_MONGO_STORAGE_URL
          value: {{ .Values.storage.mongo.url | quote }}
        {{- end }}
        {{- if .Values.netrc.enabled }}
        - name: ATHENS_NETRC_PATH
          value: "/etc/netrc/netrc"
        {{- end }}
        {{- if .Values.jaeger.enabled }}
        - name: ATHENS_TRACE_EXPORTER_URL
          value: {{ .Values.jaeger.url | quote }}
        - name: ATHENS_TRACE_EXPORTER
          value: "jaeger"
        {{- end }}
        ports:
        - containerPort: 3000
        {{- if eq .Values.storage.type "disk" }}
        volumeMounts:
        - name: storage-volume
          mountPath: {{ .Values.storage.disk.storageRoot | quote }}
        {{- end }}
        {{- if .Values.netrc.enabled}}
        - name: netrc
          mountPath: "/etc/netrc"
          readOnly: true
        {{- end }}
        - name: {{ template "fullname" . }}-configmap
          mountPath: /root/.ssh/config
          subPath: ssh_config
        - name: {{ template "fullname" . }}-configmap
          mountPath: /root/.gitconfig
          subPath: git_config
        - name: ssh-keys
          mountPath: /ssh-keys
      volumes:
      - name: ssh-keys
        emptyDir: {}
      - name: storage-volume
      {{- if .Values.storage.disk.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-storage
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.netrc.enabled }}
      - name: netrc
        secret:
          secretName: netrcsecret
      {{- end }}
      - name: {{ template "fullname" . }}-configmap
        configMap:
          name: {{ template "fullname" . }}-configmap
      - name: {{ template "fullname" . }}-secret
        secret:
          secretName: {{ template "fullname" . }}-secret
